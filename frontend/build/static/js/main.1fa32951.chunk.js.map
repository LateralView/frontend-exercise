{"version":3,"sources":["containers/Register/RegisterForm/style.scss","containers/Header/UserInfo/style.scss","components/TextField/TextField.scss","components/Button/index.scss","components/Appbar/style.scss","containers/Header/style.scss","containers/Login/LoginForm/style.scss","components/Card/style.scss","containers/Login/style.scss","containers/Register/style.scss","api/utils/index.js","api/User.js","actions/User.js","actions/Notifications.js","sagas/Login.js","sagas/Notifications.js","sagas/Register.js","sagas/index.js","reducers/index.js","reducers/User.js","reducers/Notifications.js","middlewares/UserStorage.js","store.js","containers/Routes/OnlyLoggedIn.js","containers/Routes/OnlyLoggedOut.js","containers/Routes/index.js","components/Snackbar/index.js","containers/Notifications/Notifications.js","containers/Notifications/index.js","components/Appbar/index.js","containers/Header/UserInfo/index.js","containers/Header/Header.js","containers/Header/index.js","containers/Home/index.js","components/TextField/index.js","components/Button/index.js","validators/FormValidator.js","validators/customValidations.js","containers/Login/LoginForm/index.js","components/Card/index.js","containers/Login/Login.js","containers/Login/index.js","containers/Register/RegisterForm/index.js","containers/Register/Register.js","containers/Register/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","buttonContainer","textField","parentContainer","avatarContainer","namesContainer","name","textfieldWrapper","textfieldInputWrapper","currency","textfieldError","textfieldErrorMsg","button","loading","primary","disabled","appbar","headerWrapper","drawerContent","card","body","parentView","ErrorHandler","METHODS","HeaderFactory","token","headers","Headers","append","error","genericResponse","data","regenerator_default","a","wrap","_context","prev","next","console","message","json","sent","abrupt","t0","stop","_marked","this","Authenticate","email","password","fetch","concat","process","method","JSON","stringify","Create","user","types","LOGOUT_INTENT","LOGOUT_INTENT_RESOLVED","LOGOUT_INTENT_REJECTED","USER_CREATE_INTENT","USER_CREATE_INTENT_RESOLVED","USER_CREATE_INTENT_REJECTED","AUTHENTICATE_INTENT","AUTHENTICATE_INTENT_RESOLVED","AUTHENTICATE_INTENT_REJECTED","USER_UPDATE_INTENT","USER_UPDATE_INTENT_RESOLVED","USER_UPDATE_INTENT_REJECTED","USER_ACTIVATE_INTENT","USER_ACTIVATE_INTENT_RESOLVED","USER_ACTIVATE_INTENT_REJECTED","actions","Logout","type","AuthenticateResolved","response","payload","AuthenticateRejected","UserCreate","firstname","lastname","UserCreateResolved","UserCreateRejected","UserUpdate","UserUpdateResolved","UserUpdateRejected","UserActivate","UserActivateResolved","UserActivateRejected","NOTIFICATION_OPENED","NOTIFICATION_ACTION","NOTIFICATION_TIMEOUT","OpenNotification","autoHide","arguments","length","undefined","actionMessage","actionMethod","notification","_id","uuid","v4","OnNotificationTimeout","id","OnActionTap","selector","state","Notifications","loginHandler","_ref","res","call","ok","put","t1","t2","t3","t4","t5","NotificationActions","Login_marked","_callee","_context2","takeLatest","_marked2","notificationTapHandler","notifications","select","find","Notifications_marked","Notifications_callee","takeEvery","NotificationTypes","Notifications_marked2","userCreationHandler","Register_marked","Register_callee","Register_marked2","sagas_callee","all","fork","Login","Register","sagas_marked","combineReducers","User","action","Object","objectSpread","toConsumableArray","takeRight","_open","map","actionSelected","_default","key","classCallCheck","localStorage","getItem","parse","e","_this","store","result","setItem","getState","removeItem","composeEnhanced","compose","src_store","sagaMiddleware","createSagaMiddleware","createStore","reducers","UserStorage","initialState","applyMiddleware","middleware","run","Saga","onlyLoggedIn","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","onlyLoggedOut","mapStateToProps","PrivateRoute","withRouter","connect","OnlyLoggedIn","OnlyPublicRoute","OnlyLoggedOut","Snackbar","Snackbar_default","React","notif","components_Snackbar","open","autoHideDuration","onClick","onClose","PropTypes","array","func","dispatch","Appbar","possibleConstructorReturn","getPrototypeOf","menuClick","bind","assertThisInitialized","onMenuClick","className","style","appbarWrapper","AppBar_default","classes","root","position","Toolbar_default","loggedIn","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","UserInfo","Avatar_default","object","Header","drawer","left","toggleDrawer","editUser","logout","drawerMenuClick","bool","onEdit","onLogout","setState","_this2","SwipeableDrawer_default","onOpen","UserInfo_UserInfo","Divider_default","List_default","ListItem_default","ListItemIcon_default","ExitToApp_default","ListItemText_default","components_Appbar","list","address","Home","build_default","CTable","item","TextField","handleKeyPress","event","onEnterPress","errorClass","fieldType","errorMessage","onChange","onBlur","onKeyPress","label","Button","_this$props","_this$props$className","leftImage","_this$props$loading","passThroughProps","btnClass","src","alt","react_spinners","sizeUnit","size","height","width","FormValidator","validations","validation","valid","forEach","rule","field","isInvalid","field_value","value","toString","args","validator","apply","validWhen","isValid","_email","fieldName","_password","required","LoginForm","handleInputChange","submit","preventDefault","defineProperty","target","dirty","posting","onSubmit","validate","components_TextField","src_components_Button","onRegisterPressed","defaultProps","Card","title","subtitle","children","_register","onLogin","onRegister","history","isRequired","push","components_Card","LoginForm_LoginForm","RegisterForm","gotoLogin","_goBack","onBack","goBack","Register_RegisterForm","App","es","containers_Notifications","containers_Header","BrowserRouter","exact","path","Boolean","window","hostname","match","ReactDOM","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fa32951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"_3Qu7-FNZs4hX4AHbrqjDca\",\"textField\":\"_3SJQ7UUZ67_9PwDDkasrKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentContainer\":\"_1Ih-vg8WaRB61mofBE2ZY7\",\"avatarContainer\":\"_1grWBWA1P77ZwaCj9cDTUu\",\"namesContainer\":\"sx18n-RKKmlEazNvCMEw0\",\"name\":\"_3o5qhDcug0cNUVgt5bb-x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textfieldWrapper\":\"_2h4ebdOJV5Mk4Q3GZul-yW\",\"textfieldInputWrapper\":\"_3dyvWVOntxVHJW5Vm051Tg\",\"currency\":\"_2lFtD_Sxrcic-DFSuPiPib\",\"textfieldError\":\"_1ZYNjZV2kc_huK_Gb_0wbJ\",\"textfieldErrorMsg\":\"_1AoiqRpPGZw3fcq7nWMW3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"_3hmfWblIdMIldgbt_2khf6\",\"loading\":\"_1vU2gOtOZJuyl-yHqZG9w_\",\"primary\":\"_1XovXJ2tVDI1-jW7w4Xr9-\",\"disabled\":\"_1jigJRgOJp1bcbJGaHCJkP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"_2LrMtM3mzwQbX03Dhlga-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"_1fhmppnGi2r70WtVVUqnLm\",\"drawerContent\":\"_1SDszywupkiloCUMVtYWtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"_3bXwvDVsRJgB0H8ofIy7Zn\",\"textField\":\"_1BM_opF1rn32LgjQvBunEf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_2Sgvfp41rNZbWR3oGKBjVu\",\"body\":\"_1TbbvzioMe8kYDq9Nie5nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentView\":\"_5hocjXCjee0nVg3QLjLHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentView\":\"_3YxQQpe6ZYZbfRK3PeG1L9\"};","/**\n * Common HTTP Methods used\n */\nexport const METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n  HEAD: 'HEAD'\n}\n\n/**\n * Generate the headers needed for the requests\n * @param {String} token - Token used on Authentication\n */\nexport const HeaderFactory = token => {\n  const headers = new Headers()\n  headers.append('Content-Type', 'application/json')\n  if (token) headers.append('x-access-token', token)\n  return headers\n}\n\n/**\n * Handle Gracefully an HTTP Error\n * @param {Error} error - Fetch Error\n */\nexport function* ErrorHandler(error) {\n  //eslint-disable-next-line no-console\n  console.error(error)\n  const genericResponse = { message: 'Something Went Wrong, try again later' }\n  if (error && error.json) {\n    try {\n      const data = yield error.json()\n      return data\n    } catch (e) {\n      return genericResponse\n    }\n  } else return genericResponse\n}\n","import { METHODS, HeaderFactory } from './utils'\n\n/**\n * Authenticate into the application\n * @param {string} email - Email to log into the application\n * @param {string} password - Password to log into the application\n */\nexport const Authenticate = (email, password) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users/authenticate`, {\n    method: METHODS.POST,\n    headers: HeaderFactory(),\n    body: JSON.stringify({ email, password })\n  })\n}\n\n/**\n * Create A New User\n * @param {Object} user - User Data to Create\n */\nexport const Create = user => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users`, {\n    method: METHODS.POST,\n    headers: HeaderFactory(),\n    body: JSON.stringify(user)\n  })\n}\n\n/**\n * Update the user information\n * @param {Object} user - User data to Update\n * @param {string} token - Token to authenticate\n */\nexport const Update = (user, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user`, {\n    method: METHODS.POST,\n    headers: HeaderFactory(token),\n    body: JSON.stringify(user)\n  })\n}\n\n/**\n * Activate the account\n * @param {string} token - Token Issued to activate the account\n */\nexport const Activate = token => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users/activate`, {\n    method: METHODS.POST,\n    headers: HeaderFactory(),\n    body: JSON.stringify({\n      activation_token: token\n    })\n  })\n}\n","export const types = {\n  LOGOUT_INTENT: 'LOGOUT_INTENT',\n  LOGOUT_INTENT_RESOLVED: 'LOGOUT_INTENT_RESOLVED',\n  LOGOUT_INTENT_REJECTED: 'LOGOUT_INTENT_REJECTED',\n  USER_CREATE_INTENT: 'USER_CREATE_INTENT',\n  USER_CREATE_INTENT_RESOLVED: 'USER_CREATE_INTENT_RESOLVED',\n  USER_CREATE_INTENT_REJECTED: 'USER_CREATE_INTENT_REJECTED',\n  AUTHENTICATE_INTENT: 'AUTHENTICATE_INTENT',\n  AUTHENTICATE_INTENT_RESOLVED: 'AUTHENTICATE_INTENT_RESOLVED',\n  AUTHENTICATE_INTENT_REJECTED: 'AUTHENTICATE_INTENT_REJECTED',\n  USER_UPDATE_INTENT: 'USER_UPDATE_INTENT',\n  USER_UPDATE_INTENT_RESOLVED: 'USER_UPDATE_INTENT_RESOLVED',\n  USER_UPDATE_INTENT_REJECTED: 'USER_UPDATE_INTENT_REJECTED',\n  USER_ACTIVATE_INTENT: 'USER_ACTIVATE_INTENT',\n  USER_ACTIVATE_INTENT_RESOLVED: 'USER_ACTIVATE_INTENT_RESOLVED',\n  USER_ACTIVATE_INTENT_REJECTED: 'USER_ACTIVATE_INTENT_REJECTED'\n}\n\nexport const actions = {\n  /**\n   * Generates an Logout Action\n   */\n  Logout() {\n    return { type: types.LOGOUT_INTENT }\n  },\n\n  /**\n   * Generates an Authentication Action\n   * @param {string} email - Email to log into the application\n   * @param {string} password - Password to log into the application\n   */\n  Authenticate(email, password) {\n    return {\n      type: types.AUTHENTICATE_INTENT,\n      data: { email, password }\n    }\n  },\n\n  /**\n   * Generates an Authentication Resolved Action\n   * @param {object} response - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  AuthenticateResolved(response, payload) {\n    return {\n      type: types.AUTHENTICATE_INTENT_RESOLVED,\n      response,\n      payload\n    }\n  },\n\n  /**\n   * Generates an Authentication Rejected Action\n   * @param {object} error - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  AuthenticateRejected(error, payload) {\n    return {\n      type: types.AUTHENTICATE_INTENT_REJECTED,\n      error,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Create Action\n   * @param {string} email - Email of the new user\n   * @param {string} password - Password of the new user\n   * @param {string} firstname - first name of the new user\n   * @param {string} lastname - last name of the new user\n   */\n  UserCreate(email, password, firstname, lastname) {\n    return {\n      type: types.USER_CREATE_INTENT,\n      data: { email, password, firstname, lastname }\n    }\n  },\n\n  /**\n   * Generates an User Create Resolved Action\n   * @param {object} response - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserCreateResolved(response, payload) {\n    return {\n      type: types.USER_CREATE_INTENT_RESOLVED,\n      response,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Create Rejected Action\n   * @param {object} error - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserCreateRejected(error, payload) {\n    return {\n      type: types.USER_CREATE_INTENT_REJECTED,\n      error,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Update Action\n   * @param {object} data - Data required to update an user\n   */\n  UserUpdate(data) {\n    return {\n      type: types.USER_UPDATE_INTENT,\n      data\n    }\n  },\n\n  /**\n   * Generates an User Update Resolved Action\n   * @param {object} response - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserUpdateResolved(response, payload) {\n    return {\n      type: types.USER_UPDATE_INTENT_RESOLVED,\n      response,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Update Rejected Action\n   * @param {object} error - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserUpdateRejected(error, payload) {\n    return {\n      type: types.USER_UPDATE_INTENT_REJECTED,\n      error,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Activate Action\n   * @param {object} token - Token to activate an user\n   */\n  UserActivate(token) {\n    return {\n      type: types.USER_ACTIVATE_INTENT,\n      token\n    }\n  },\n\n  /**\n   * Generates an User Activate Resolved Action\n   * @param {object} response - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserActivateResolved(response, payload) {\n    return {\n      type: types.USER_ACTIVATE_INTENT_RESOLVED,\n      response,\n      payload\n    }\n  },\n\n  /**\n   * Generates an User Update Rejected Action\n   * @param {object} error - Fetch API response\n   * @param {object} payload - Fetch API Payload encoded as JSON\n   */\n  UserActivateRejected(error, payload) {\n    return {\n      type: types.USER_ACTIVATE_INTENT_REJECTED,\n      error,\n      payload\n    }\n  }\n}\n\nexport const selectors = {\n  GetUser: state => state.User,\n  GetToken: state => state.User.token\n}\n","import uuid from 'node-uuid'\n\nexport const types = {\n  NOTIFICATION_OPENED: 'NOTIFICATION_OPENED',\n  NOTIFICATION_ACTION: 'NOTIFICATION_ACTION',\n  NOTIFICATION_TIMEOUT: 'NOTIFICATION_TIMEOUT'\n}\n\nexport const actions = {\n  /**\n   * Generates a New Notification\n   * @param {string} message - Message to Show\n   * @param {number} autoHide - Timeout to Close, in ms.\n   * @param {string} actionMessage - Action Message that can be clicked\n   * @param {function} actionMethod - Action To Do\n   */\n  OpenNotification(message, autoHide = 3000, actionMessage, actionMethod) {\n    return {\n      type: types.NOTIFICATION_OPENED,\n      notification: {\n        _id: uuid.v4(),\n        message,\n        autoHide,\n        actionMessage,\n        actionMethod\n      }\n    }\n  },\n\n  /**\n   * Called when the notification closes by timeout\n   * @param {string} id - Id of the notification\n   */\n  OnNotificationTimeout(id) {\n    return {\n      type: types.NOTIFICATION_TIMEOUT,\n      id\n    }\n  },\n\n  /**\n   * Called When the action of the notification is tapped\n   * @param {string} id - Id of the notification\n   */\n  OnActionTap(id) {\n    return {\n      type: types.NOTIFICATION_ACTION,\n      id\n    }\n  }\n}\n\nexport const selector = state => state.Notifications\n","import { Authenticate } from '../api/User'\nimport { ErrorHandler } from '../api/utils'\nimport { call, put, takeLatest } from 'redux-saga/effects'\nimport { actions, types } from '../actions/User'\nimport { actions as NotificationActions } from '../actions/Notifications'\n\n/**\n * Handles Login intent\n * @param {object} action - Action Object\n */\nfunction* loginHandler({ data }) {\n  try {\n    const res = yield call(Authenticate, data.email, data.password)\n    // Check if res.status ~ 200\n    if (res.ok) {\n      yield put(actions.AuthenticateResolved(res, yield res.json()))\n    } else throw res\n  } catch (e) {\n    const response = yield ErrorHandler(e)\n    yield put(NotificationActions.OpenNotification(response.message, 1500))\n    yield put(actions.AuthenticateRejected(e, response))\n  }\n}\n\nexport default function*() {\n  yield takeLatest(types.AUTHENTICATE_INTENT, loginHandler)\n}\n","import { call, takeEvery, select } from 'redux-saga/effects'\nimport { types as NotificationTypes, selector } from '../actions/Notifications'\n\nfunction* notificationTapHandler({ id }) {\n  const notifications = yield select(selector)\n  const notification = notifications.find(\n    notification => notification._id === id\n  )\n\n  yield call(notification.actionMethod)\n}\n\nexport default function*() {\n  yield takeEvery(NotificationTypes.NOTIFICATION_ACTION, notificationTapHandler)\n}\n","import { Create } from '../api/User'\nimport { ErrorHandler } from '../api/utils'\nimport { call, put, takeLatest } from 'redux-saga/effects'\nimport { actions, types } from '../actions/User'\nimport { actions as NotificationActions } from '../actions/Notifications'\n\nfunction* userCreationHandler({ data }) {\n  try {\n    const res = yield call(Create, data)\n    // Check if res.status ~ 200\n    if (res.ok) {\n      yield put(\n        NotificationActions.OpenNotification(\n          'Check your email and validate your account :)',\n          1500\n        )\n      )\n    } else throw res\n  } catch (e) {\n    const response = yield ErrorHandler(e)\n    yield put(NotificationActions.OpenNotification(response.message, 1500))\n    yield put(actions.AuthenticateRejected(e, response))\n  }\n}\n\nexport default function*() {\n  yield takeLatest(types.USER_CREATE_INTENT, userCreationHandler)\n}\n","import { fork, all } from 'redux-saga/effects'\nimport Login from './Login'\nimport Notifications from './Notifications'\nimport Register from './Register'\n\nexport default function*() {\n  yield all([fork(Login), fork(Register), fork(Notifications)])\n}\n","import { combineReducers } from 'redux'\n\nimport User from './User'\nimport Notifications from './Notifications'\n\nexport default combineReducers({\n  User,\n  Notifications\n})\n","import { types } from '../actions/User'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case types.AUTHENTICATE_INTENT_RESOLVED:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case types.LOGOUT_INTENT:\n      return {}\n\n    default:\n      return state\n  }\n}\n","import { takeRight } from 'lodash'\nimport { types } from '../actions/Notifications'\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case types.NOTIFICATION_OPENED:\n      return [...takeRight(state, 4), { ...action.notification, _open: true }]\n\n    case types.NOTIFICATION_TIMEOUT:\n      return state.map(notification => {\n        if (notification._id === action.id)\n          return { ...notification, _open: false }\n        else return notification\n      })\n\n    case types.NOTIFICATION_ACTION:\n      return state.map(notification => {\n        if (notification._id === action.id)\n          return { ...notification, actionSelected: true }\n        else return notification\n      })\n\n    default:\n      return state\n  }\n}\n","import { types } from '../actions/User'\n\nexport default class {\n  constructor(key) {\n    this.key = key\n  }\n\n  static initialState() {\n    const state = localStorage.getItem(this.key)\n    if (state) {\n      try {\n        let parsedState = JSON.parse(state)\n        return {\n          User: parsedState\n        }\n      } catch (e) {\n        return {}\n      }\n    } else return {}\n  }\n\n  static middleware() {\n    return store => next => action => {\n      if (action.type === types.AUTHENTICATE_INTENT_RESOLVED) {\n        let result = next(action)\n        localStorage.setItem(this.key, JSON.stringify(store.getState().User))\n        return result\n      } else if (action.type === types.LOGOUT_INTENT) {\n        let result = next(action)\n        localStorage.removeItem(this.key)\n        return result\n      } else return next(action)\n    }\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport Saga from './sagas'\nimport reducers from './reducers'\nimport UserStorage from './middlewares/UserStorage'\n\nconst composeEnhanced =\n  process.env.NODE_ENV === 'development' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose\n\nexport default () => {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    reducers,\n    UserStorage.initialState(),\n    composeEnhanced(\n      applyMiddleware(\n        sagaMiddleware,\n        UserStorage.middleware()\n      )\n    )\n  )\n  sagaMiddleware.run(Saga)\n  return store\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst onlyLoggedIn = ({ component: Component, user: User, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      User.token ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )}\n  />\n)\n\nonlyLoggedIn.propTypes = {\n  component: PropTypes.func,\n  user: PropTypes.object,\n  location: PropTypes.any\n}\n\nexport default onlyLoggedIn\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst onlyLoggedOut = ({ component: Component, user: User, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !User.token ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { from: props.location }\n          }}\n        />\n      )}\n  />\n)\n\nonlyLoggedOut.propTypes = {\n  component: PropTypes.func,\n  user: PropTypes.object,\n  location: PropTypes.any\n}\n\nexport default onlyLoggedOut\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport OnlyLoggedIn from './OnlyLoggedIn'\nimport OnlyLoggedOut from './OnlyLoggedOut'\n\nconst mapStateToProps = state => ({\n  user: state.User\n})\n\nexport const PrivateRoute = withRouter(connect(mapStateToProps)(OnlyLoggedIn))\nexport const OnlyPublicRoute = withRouter(\n  connect(mapStateToProps)(OnlyLoggedOut)\n)\n","import React from 'react'\nimport MUISnackbar from '@material-ui/core/Snackbar'\n\nclass Snackbar extends React.Component {\n  render() {\n    return (\n      <MUISnackbar { ...this.props } />\n    )\n  }\n}\n\nexport default Snackbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Snackbar from '../../components/Snackbar'\n\nexport default class Notifications extends React.Component {\n  static get propTypes() {\n    return {\n      Notifications: PropTypes.array,\n      OnNotificationTimeout: PropTypes.func,\n      OnActionTap: PropTypes.func\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.Notifications.map(notif => (\n          <Snackbar\n            key={notif._id}\n            open={notif._open}\n            message={ <span>{notif.message}</span> }\n            action={notif.actionMessage || null}\n            autoHideDuration={notif.autoHide}\n            onClick={() => this.props.OnActionTap(notif._id)}\n            onClose={() => this.props.OnNotificationTimeout(notif._id)}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/Notifications'\nimport Notifications from './Notifications'\n\nconst mapStateToProps = state => ({\n  Notifications: state.Notifications\n})\n\nconst mapDispatchToProps = dispatch => ({\n  OnNotificationTimeout(id) {\n    return dispatch(actions.OnNotificationTimeout(id))\n  },\n  OnActionTap(id) {\n    return dispatch(actions.OnActionTap(id))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MUIAppbar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport style from './style.scss'\n\nclass Appbar extends React.Component {\n  static propTypes = {\n    loggedIn: PropTypes.bool,\n    onMenuClick: PropTypes.func\n  }\n\n  constructor() {\n    super()\n\n    // bindings\n    this.menuClick = this.menuClick.bind(this)\n  }\n\n  menuClick() {\n    this.props.onMenuClick()\n  }\n\n  render() {\n    return (\n      <div className={ style.appbarWrapper }>\n        <MUIAppbar\n          classes={{ root: style.appbar }}\n          position=\"relative\"\n        >\n          <Toolbar>\n            {\n              this.props.loggedIn ? (\n                <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={ this.menuClick }>\n                  <MenuIcon />\n                </IconButton>\n              ) : null\n            }\n            <Typography variant=\"h6\" color=\"inherit\">\n              React Skeleton\n            </Typography>\n          </Toolbar>\n        </MUIAppbar>\n      </div>\n    )\n  }\n}\n\nexport default Appbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport style from './style.scss'\n\nimport Avatar from '@material-ui/core/Avatar'\n\nexport default class UserInfo extends React.Component {\n  static get propTypes() {\n    return { user: PropTypes.object }\n  }\n\n  static get defaultProps() {\n    return { user: {} }\n  }\n\n  render() {\n    return (\n      <div className={style.parentContainer}>\n        <div className={style.avatarContainer}>\n          <Avatar>GC</Avatar>\n          <div className={style.namesContainer}>\n            <p className={style.name}>\n              {this.props.user.firstname} {this.props.user.lastname}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Appbar from '../../components/Appbar'\n\nimport UserInfo from './UserInfo'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nimport style from './style.scss'\n\nexport default class Header extends React.Component {\n  static get propTypes() {\n    return {\n      user: PropTypes.object,\n      loggedIn: PropTypes.bool,\n      onEdit: PropTypes.func,\n      onLogout: PropTypes.func\n    }\n  }\n\n  constructor() {\n    super()\n    this.state = {\n      drawer: {\n        left: false\n      }\n    }\n    this.toggleDrawer = this.toggleDrawer.bind(this)\n    this.editUser = this.editUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.drawerMenuClick = this.drawerMenuClick.bind(this)\n  }\n\n  toggleDrawer(open) {\n    this.setState({\n      drawer: {\n        left: open\n      }\n    })\n  }\n\n  drawerMenuClick() {\n    this.setState({\n      drawer: {\n        left: true\n      }\n    })\n  }\n\n  editUser() {\n    this.toggleDrawer()\n    // TODO: implement\n    // this.props.onEdit()\n  }\n\n  logout() {\n    this.toggleDrawer(false)\n    this.props.onLogout()\n  }\n\n  render() {\n    return (\n      <div className={style.headerWrapper}>\n        {\n          this.props.loggedIn ? (\n            <SwipeableDrawer\n              open={ this.state.drawer.left }\n              onOpen={ () => this.toggleDrawer(true) }\n              onClose={ () => this.toggleDrawer(false) }\n            >\n              <div className={ style.drawerContent }>\n                <UserInfo user={this.props.user} />\n                <Divider />\n                <List>\n                  <ListItem button onClick={ this.logout }>\n                    <ListItemIcon>\n                      <ExitToAppIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Logout\" />\n                  </ListItem>\n                </List>\n              </div>\n            </SwipeableDrawer>\n          ) : null\n        }\n\n        <Appbar onMenuClick={ this.drawerMenuClick } loggedIn={ this.props.loggedIn }>\n          <h2>React Skeleton</h2>\n        </Appbar>\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/User'\nimport Header from './Header'\n\nconst mapStateToProps = state => ({\n  user: state.User.user,\n  loggedIn: !!state.User.token\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout() {\n    dispatch(actions.Logout())\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React from 'react'\nimport CTable from '@lateralview/lv-react-components'\n\nconst list = [\n  {\n    id: 1,\n    name: 'Pepe Argento',\n    email: 'pepeargento@gmail.com',\n    address: 'La rioja 123'\n  },\n  {\n    id: 2,\n    name: 'Jorge Pelongo',\n    email: 'jorge@gmail.com',\n    address: 'La rioja 321'\n  },\n  {\n    id: 3,\n    name: 'Rodolfo Sarlanga',\n    email: 'rodo@gmail.com',\n    address: 'Catamarca 321'\n  }\n]\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <CTable.CTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Address</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            list.map(item => {\n              return (\n                <tr key={ item.id }>\n                  <td>{ item.name }</td>\n                  <td>{ item.email }</td>\n                  <td>{ item.address }</td>\n                </tr>\n              )\n            })\n          }\n          </tbody>\n        </CTable.CTable>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from './TextField.scss'\n\nclass TextField extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    type: PropTypes.string,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    onEnterPress: PropTypes.func\n  }\n\n  constructor() {\n    super()\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  handleKeyPress(event) {\n    if (this.props.onEnterPress && event.key === 'Enter') {\n      this.props.onEnterPress(event)\n    }\n  }\n\n  render() {\n    const errorClass = this.props.error ? style.textfieldError : ''\n    let fieldType = this.props.type || 'text'\n    if (fieldType === 'currency') {\n      fieldType = 'text'\n    }\n\n    return (\n      <div className={`${style.textfieldWrapper} ${errorClass} ${this.props.className}`} >\n        <div className={ style.textfieldErrorMsg }>{ this.props.errorMessage }</div>\n        <div className={ `${style.textfieldInputWrapper} ${this.props.type || ''}` }>\n          <input\n            type={ fieldType }\n            name={ this.props.name }\n            onChange={ this.props.onChange }\n            onBlur={ this.props.onChange }\n            onKeyPress={ this.handleKeyPress }\n            className={ this.props.type }\n          />\n          <label>{this.props.label}</label>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TextField\n","// react\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { ClipLoader } from 'react-spinners'\n\n// styles\nimport style from './index.scss'\n\nclass Button extends React.Component {\n  static propTypes = {\n    label: PropTypes.string,\n    primary: PropTypes.bool,\n    disabled: PropTypes.bool,\n    loading: PropTypes.bool,\n    className: PropTypes.string,\n    leftImage: PropTypes.string\n  }\n\n  render() {\n    const {\n      className = '',\n      primary,\n      leftImage,\n      loading = false,\n      ...passThroughProps\n    } = this.props\n    const btnClass = `${style.button} ${loading ? style.loading : ''}`\n    return (\n      <button\n        className={`${btnClass} ${this.props.disabled ? style.disabled : ''} ${\n          this.props.primary ? style.primary : ''\n        } ${className}`}\n        {...passThroughProps}\n      >\n        {\n          leftImage && !this.props.loading && (\n            <img src={ leftImage } alt='' />\n          )\n        }\n        {\n          loading && (\n            <ClipLoader\n              sizeUnit={'px'}\n              size={15}\n              height={15}\n              width={15}\n              color={'#fff'}\n              loading={ true }\n            />\n          )\n        }\n        {this.props.label}\n      </button>\n    )\n  }\n}\n\nexport default Button\n","import validator from 'validator'\n\nclass FormValidator {\n  constructor(validations) {\n    this.validations = validations\n  }\n\n  validate(state) {\n    // start out assuming valid\n    let validation = this.valid()\n    // for each validation rule\n    this.validations.forEach(rule => {\n      // if the field isn't already marked invalid by an earlier rule\n      if (!validation[rule.field].isInvalid) {\n        // determine the field value, the method to invoke and\n        // optional args from the rule definition\n        const field_value = state[rule.field].value.toString()\n        const args = rule.args || []\n        const validation_method =\n          typeof rule.method === 'string' ? validator[rule.method] : rule.method\n        // call the validation_method with the current field value\n        // as the first argument, any additional arguments, and the\n        // whole state as a final argument.  If the result doesn't\n        // match the rule.validWhen property, then modify the\n        // validation object for the field and set the isValid\n        // field to false\n        if (validation_method(field_value, ...args, state) !== rule.validWhen) {\n          validation[rule.field] = {\n            isInvalid: true,\n            message: rule.message\n          }\n          validation.isValid = false\n        }\n      }\n    })\n    return validation\n  }\n\n  // create a validation object for a valid form\n  valid() {\n    const validation = {}\n\n    this.validations.map(\n      rule => (validation[rule.field] = { isInvalid: false, message: '' })\n    )\n    return { isValid: true, ...validation }\n  }\n}\n\nexport default FormValidator\n","const _email = (fieldName) => [\n  {\n    field: fieldName,\n    method: 'isEmail',\n    validWhen: true,\n    message: 'Invalid email address'\n  }\n]\n\nconst _phone = (fieldName) => [\n  {\n    field: fieldName,\n    method: 'matches',\n    args: [\n      /^(1\\s?)?((\\([0-9]{3}\\))|[0-9]{3})[\\s-]?[\\0-9]{3}[\\s-]?[0-9]{4}$/\n    ],\n    validWhen: true,\n    message: 'Please use US phone number format: 555-555-5555'\n  }\n]\n\nconst _numeric = (fieldName) => [\n  {\n    field: fieldName,\n    method: 'matches',\n    args: [\n      /^(\\d+(\\.\\d)?\\d*)?$/\n    ],\n    validWhen: true,\n    message: 'Only numbers allowed: 63.58'\n  }\n]\n\nconst _password = (fieldName) => [\n  {\n    field: fieldName,\n    method: 'matches',\n    args: [/^(?=.*[A-Za-z])(?=.*\\d).{8,}$/],\n    validWhen: true,\n    message: 'Password must have at least 8 characters, one number and one letter'\n  },\n]\n\nexport const required = (fieldName) => [\n  {\n    field: fieldName,\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'This field is required'\n  }\n]\n\nexport const email = (fieldName, isRequired = true) => isRequired ? [\n  ...required(fieldName),\n  ..._email(fieldName)\n] : [ ..._email(fieldName) ]\n\nexport const phone = (fieldName, isRequired = true) => isRequired ? [\n  ...required(fieldName),\n  ..._phone(fieldName)\n] : [ ..._phone(fieldName) ]\n\nexport const password = (fieldName, isRequired = true) => isRequired ? [\n  ...required(fieldName),\n  ..._password(fieldName)\n] : [ ..._password(fieldName) ]\n\nexport const numeric = (fieldName, isRequired = true) => isRequired ? [\n  ...required(fieldName),\n  ..._numeric(fieldName)\n] : [ ..._numeric(fieldName) ]\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TextField from '../../../components/TextField'\nimport Button from '../../../components/Button'\nimport FormValidator from '../../../validators/FormValidator'\nimport { required, email } from '../../../validators/customValidations'\n\nimport style from './style.scss'\n\nexport default class LoginForm extends React.Component {\n  static propTypes = {\n    posting: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    onRegisterPressed: PropTypes.func\n  }\n\n  static defaultProps = {\n    posting: false\n  }\n\n  constructor() {\n    super()\n\n    // bindings\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.isValid = this.isValid.bind(this)\n    this.submit = this.submit.bind(this)\n\n    // set initial state\n    this.state = {\n      email: { value: '' },\n      password: { value: '' }\n    }\n\n    // validations\n    this.validator = new FormValidator([\n      ...email('email', true),\n      ...required('password')\n    ])\n  }\n\n  /**\n   * update state with fields information\n   *\n   * @param event {object} input event\n   */\n  handleInputChange(event) {\n    event.preventDefault()\n    this.setState({\n      [event.target.name]: {\n        value: event.target.value,\n        dirty: true\n      }\n    })\n  }\n\n  /**\n   * check if the form is in a valid state\n   */\n  isValid() {\n    return this.validation.isValid && !this.props.posting\n  }\n\n  /**\n   * submit email and password to login\n   */\n  submit() {\n    if (this.isValid()) {\n      this.props.onSubmit({\n        email: this.state.email.value,\n        password: this.state.password.value\n      })\n    }\n  }\n\n  render() {\n    this.validation = this.validator.validate(this.state)\n    return (\n      <section>\n        <article>\n          <TextField\n            className={ style.textField }\n            name=\"email\"\n            label=\"Email\"\n            errorMessage={this.validation.email.message}\n            error={this.validation.email.isInvalid && this.state.email.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.onSubmit }\n          />\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            errorMessage={this.validation.password.message}\n            error={this.validation.password.isInvalid && this.state.password.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.onSubmit }\n            type=\"password\"\n          />\n        </article>\n        <article className={style.buttonContainer}>\n          <Button\n            label=\"Register New Account\"\n            onClick={ this.props.onRegisterPressed }\n          />\n          <Button\n            label=\"Log In\"\n            disabled={ !this.isValid() }\n            onClick={ this.submit }\n            primary\n          />\n        </article>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from './style.scss'\n\nclass Card extends React.Component {\n  static propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    children: PropTypes.any\n  }\n  render() {\n    return (\n      <div className={ style.card }>\n        <h2>{ this.props.title }</h2>\n        <p>{ this.props.subtitle }</p>\n        <div className={ style.body }>\n          { this.props.children }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import style from './style.scss'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport LoginForm from './LoginForm'\nimport Card from '../../components/Card'\n\nexport default class Login extends React.Component {\n  static get propTypes() {\n    return {\n      onLogin: PropTypes.func,\n      onRegister: PropTypes.func,\n      history: PropTypes.object.isRequired\n    }\n  }\n\n  constructor() {\n    super()\n    this._register = this._register.bind(this)\n  }\n\n  _register() {\n    this.props.history.push('/register')\n  }\n\n  render() {\n    return (\n      <div className={style.parentView}>\n        <Card title=\"Login\" subtitle=\"Log in With your SKEL Account\">\n          <LoginForm\n            onSubmit={this.props.onLogin}\n            onRegisterPressed={this._register}\n          />\n        </Card>\n      </div>\n    )\n  }\n}\n","import Login from './Login'\nimport { connect } from 'react-redux'\nimport { actions } from '../../actions/User'\nimport { withRouter } from 'react-router-dom'\n\nconst mapDispatchToProps = dispatch => ({\n  onLogin({ email, password }) {\n    dispatch(actions.Authenticate(email, password))\n  }\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router'\n\nimport TextField from '../../../components/TextField'\nimport Button from '../../../components/Button'\nimport FormValidator from '../../../validators/FormValidator'\nimport {\n  required,\n  email,\n  password\n} from '../../../validators/customValidations'\n\nimport style from './style.scss'\n\nclass RegisterForm extends React.Component {\n  static get propTypes() {\n    return {\n      posting: PropTypes.bool,\n      history: PropTypes.object,\n      onSubmit: PropTypes.func\n    }\n  }\n\n  constructor() {\n    super()\n\n    // bindings\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.isValid = this.isValid.bind(this)\n    this.submit = this.submit.bind(this)\n    this.gotoLogin = this.gotoLogin.bind(this)\n\n    // validations\n    this.validator = new FormValidator([\n      ...email('email', true),\n      ...password('password', true),\n      ...required('firstname'),\n      ...required('lastname')\n    ])\n\n    // initial state\n    this.state = {\n      email: { value: '' },\n      password: { value: '' },\n      firstname: { value: '' },\n      lastname: { value: '' }\n    }\n  }\n\n  /**\n   * update state with fields information\n   *\n   * @param event {object} input event\n   */\n  handleInputChange(event) {\n    event.preventDefault()\n    this.setState({\n      [event.target.name]: {\n        value: event.target.value,\n        dirty: true\n      }\n    })\n  }\n\n  /**\n   * check if the form is in a valid state\n   */\n  isValid() {\n    return this.validation.isValid && !this.props.posting\n  }\n\n  /**\n   * submit form\n   * pass the state fields to onSubmit prop if it's valid\n   */\n  submit() {\n    if (this.isValid()) {\n      this.props.onSubmit({\n        email: this.state.email.value,\n        password: this.state.password.value,\n        firstname: this.state.firstname.value,\n        lastname: this.state.lastname.value\n      })\n    }\n  }\n\n  /**\n   * redirect to login page\n   */\n  gotoLogin() {\n    this.props.history.push('/login')\n  }\n\n  render() {\n    this.validation = this.validator.validate(this.state)\n    return (\n      <section>\n        <article>\n          <TextField\n            name=\"email\"\n            label=\"Email\"\n            errorMessage={this.validation.email.message}\n            error={this.validation.email.isInvalid && this.state.email.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.submit }\n            className={ style.textField }\n          />\n\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            errorMessage={this.validation.password.message}\n            error={this.validation.password.isInvalid && this.state.password.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.submit }\n            className={ style.textField }\n            type=\"password\"\n          />\n\n          <TextField\n            name=\"firstname\"\n            label=\"First Name\"\n            errorMessage={this.validation.firstname.message}\n            error={this.validation.firstname.isInvalid && this.state.firstname.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.submit }\n            className={ style.textField }\n          />\n\n          <TextField\n            name=\"lastname\"\n            label=\"Last Name\"\n            errorMessage={this.validation.lastname.message}\n            error={this.validation.lastname.isInvalid && this.state.lastname.dirty}\n            onChange={this.handleInputChange}\n            onEnterPress={ this.submit }\n            className={ style.textField }\n          />\n        </article>\n\n        <article className={ style.buttonContainer }>\n          <Button\n            label=\"Back to Log In\"\n            onClick={ this.gotoLogin }\n          />\n          <Button\n            label=\"Register Account\"\n            disabled={ !this.isValid() }\n            onClick={ this.submit }\n            primary\n          />\n        </article>\n      </section>\n    )\n  }\n}\n\nexport default withRouter(RegisterForm)\n","import style from './style.scss'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport RegisterForm from './RegisterForm'\nimport Card from '../../components/Card'\n// import { Card, CardTitle, CardText } from 'react-toolbox/lib/card'\n\nexport default class Register extends React.Component {\n  static get propTypes() {\n    return {\n      onBack: PropTypes.func,\n      onRegister: PropTypes.func,\n      history: PropTypes.object.isRequired\n    }\n  }\n\n  constructor() {\n    super()\n    this._goBack = this._goBack.bind(this)\n  }\n\n  _goBack() {\n    this.props.history.goBack()\n  }\n\n  render() {\n    return (\n      <div className={style.parentView}>\n        <Card title=\"Register\" subtitle=\"Register a New Account\">\n          <RegisterForm onBack={this._goBack} onSubmit={this.props.onRegister} />\n        </Card>\n      </div>\n    )\n  }\n}\n","import { withRouter } from 'react-router-dom'\nimport { actions } from '../../actions/User'\nimport { connect } from 'react-redux'\nimport Register from './Register'\n\nconst mapDispatchToProps = dispatch => ({\n  onRegister({ email, password, firstname, lastname }) {\n    dispatch(actions.UserCreate(email, password, firstname, lastname))\n  }\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(Register))\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport store from '../../store'\nimport { PrivateRoute, OnlyPublicRoute } from '../Routes'\n\nimport Notifications from '../Notifications'\nimport Header from '../Header'\nimport Home from '../Home'\nimport Login from '../Login'\nimport Register from '../Register'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={ store() }>\n        <div>\n          <Notifications />\n          <Header />\n          <Router>\n            <div>\n              <PrivateRoute exact path=\"/\" component={Home} />\n              <OnlyPublicRoute exact path=\"/login\" component={Login} />\n              <OnlyPublicRoute exact path=\"/register\" component={Register} />\n            </div>\n          </Router>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}